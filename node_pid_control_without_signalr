/* Yong-Jun Shin, UCONN CSML, 2016
Node.js, socket.io, Arduino
 */
var five = require("johnny-five"),
    board, photoresistor;

board = new five.Board();

var io = require('socket.io')(8000);

board.on("ready", function() {

    // Create a new `photoresistor` hardware instance.
    photoresistor = new five.Sensor({
        pin: "A0",
        freq: 250
    });

    // Inject the `sensor` hardware into
    // the Repl instance's context;
    // allows direct command line access
    board.repl.inject({
        pot: photoresistor
    });

    // "data" get the current reading from the photoresistor
    var intensity = 0;
    var ref = 700;
    var led = new five.Led(11);
    var error = 0;
    var control = 0;
    var p = 1;
    led.brightness(intensity);

    photoresistor.on("data", function() {
        console.log(this.value);

        io.emit('message', this.value);
        error = ref-this.value;
        control = ((error * p)/850)*255;
        intensity += control;
        if (intensity < 0) intensity = 0;
        if (intensity > 255) intensity = 255;

        led.brightness(intensity);
        console.log(intensity);
    });
    
    /*
    io.on('connection', function(socket){
        var i = 1;
        socket.on('message', function(msg){
            i += 0.01;
            Math.sin (i);
            //led.brightness(msg*msg/10000);
            //console.log(msg*msg/10000);
        });
   */

});



